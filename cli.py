"""–ú–æ–¥—É–ª—å —Å –∫–æ–Ω—Å–æ–ª—å–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏"""
from time import sleep

import click
import pizza_types
from constants import PIZZA_SIZES, PIZZA_TYPES
from decorators import log
from pizza_types import PizzaType


def get_menu_text() -> str:
    """–ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –º–µ–Ω—é"""
    text = '–ú–ï–ù–Æ:\n'
    for pizza_type in PIZZA_TYPES:
        pizza = getattr(pizza_types, pizza_type)
        text += f'{pizza("L").dict()}\n'
    return text


@click.group()
def cli() -> None:
    """–°–∞–º–∞—è –≤–∫—É—Å–Ω–∞—è –ø–∏—Ü—Ü–∞ —Ç–æ–ª—å–∫–æ —É –Ω–∞—Å!"""


@cli.command()
def menu() -> None:
    """–ù–∞—à–µ –º–µ–Ω—é"""
    print(get_menu_text())


@log()
def bake(pizza: PizzaType) -> None:
    """–ì–æ—Ç–æ–≤–∏—Ç –ø–∏—Ü—Ü—É"""
    print(f'–ì–æ—Ç–æ–≤–∏–º –¥–ª—è –í–∞—Å –ø–∏—Ü—Ü—É {pizza.name} ({pizza.size})...')
    sleep(2)
    print('–í–∞—à–∞ –ø–∏—Ü—Ü–∞ –≥–æ—Ç–æ–≤–∞!')


@log('üõµ –î–æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞ {} —Å!')
def deliver(pizza: PizzaType) -> None:
    """–î–æ—Å—Ç–∞–≤–∫–∞"""
    print(f'–ö—É—Ä—å–µ—Ä —É–∂–µ –≤ –ø—É—Ç–∏. –í–µ–∑–µ—Ç –ø–∏—Ü—Ü—É {pizza.name} ({pizza.size})...')
    sleep(2)
    print('–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞!')


@log('üè† –ó–∞–±—Ä–∞–ª–∏ –∑–∞ {} —Å!')
def pickup(pizza: PizzaType) -> None:
    """–°–∞–º–æ–≤—ã–≤–æ–∑"""
    print(f'–û–∂–∏–¥–∞–µ–º, –ø–æ–∫–∞ –í—ã –∑–∞–±–µ—Ä–µ—Ç–µ –ø–∏—Ü—Ü—É {pizza.name} ({pizza.size})...')
    sleep(2)
    print('–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞!')


@cli.command()
@click.option('--delivery', default=False, is_flag=True)
@click.option('--size', default='L', is_flag=False)
@click.argument('pizza_type', nargs=1)
def order(pizza_type: str, size: str, delivery: bool) -> None:
    """–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑"""
    if pizza_type not in PIZZA_TYPES:
        print('–¢–∞–∫–æ–π –ø–∏—Ü—Ü—ã –Ω–µ—Ç –≤ –º–µ–Ω—é')
        print(get_menu_text())
        return

    if size not in PIZZA_SIZES:
        print(f'–£ –Ω–∞—Å –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–∑–º–µ—Ä—ã: {PIZZA_SIZES}')
        print(get_menu_text())
        return

    pizza_obj = getattr(pizza_types, pizza_type)(size=size)
    bake(pizza_obj)
    if delivery:
        deliver(pizza_obj)
    else:
        pickup(pizza_obj)


if __name__ == '__main__':
    cli()
