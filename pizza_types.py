"""–ú–æ–¥—É–ª—å —Å –∫–ª–∞—Å—Å–∞–º–∏ –ø–∏—Ü—Ü"""
from constants import PIZZA_SIZES
from typing import List, Union


class Pizza:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –ø–∏—Ü—Ü"""

    def __init__(self, size: str) -> None:
        if size not in PIZZA_SIZES:
            raise ValueError(f'–ò–∑–≤–∏–Ω–∏—Ç–µ, –º—ã –≥–æ—Ç–æ–≤–∏–º —Ç–æ–ª—å–∫–æ {PIZZA_SIZES}')
        self.size: str = size
        self.name: str = ''
        self.emoji: str = ''
        self.recipe: List[str] = []

    def __eq__(self, other):
        if issubclass(type(other), Pizza):
            return self.size == other.size and self.name == other.name
        return False

    def dict(self):
        """–ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞ –ø–∏—Ü—Ü—ã"""
        if not self.name:
            raise ValueError('–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø –ø–∏—Ü—Ü—ã!')
        return {f'{self.emoji} {self.name}': self.recipe}


class Margherita(Pizza):
    """–ö–ª–∞—Å—Å –¥–ª—è –ø–∏—Ü—Ü—ã –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞"""

    def __init__(self, size: str) -> None:
        super().__init__(size)
        self.emoji = 'üßÄ'
        self.name = 'Margherita'
        self.recipe = ['tomato sauce', 'mozzarella', 'tomatoes']


class Pepperoni(Pizza):
    """–ö–ª–∞—Å—Å –¥–ª—è –ø–∏—Ü—Ü—ã –ü–µ–ø–ø–µ—Ä–æ–Ω–∏"""

    def __init__(self, size: str) -> None:
        super().__init__(size)
        self.emoji = 'üçï'
        self.name = 'Pepperoni'
        self.recipe = ['tomato sauce', 'mozzarella', 'pepperoni']


class Hawaiian(Pizza):
    """–ö–ª–∞—Å—Å –¥–ª—è –ø–∏—Ü—Ü—ã –ì–∞–≤–∞–π—Å–∫–∞—è"""

    def __init__(self, size: str) -> None:
        super().__init__(size)
        self.emoji = 'üçç'
        self.name = 'Hawaiian'
        self.recipe = ['tomato sauce', 'mozzarella', 'chicken', 'pineapples']


PizzaType = Union[Margherita, Pepperoni, Hawaiian]
